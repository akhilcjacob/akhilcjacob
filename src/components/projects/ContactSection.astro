---
---
<section id="contact" class="py-24">
  <div class="glass-card-lg max-w-3xl mx-auto p-12">
    <h2 class="text-4xl md:text-5xl font-bold text-white text-center mb-6">
      Start Your MVP Journey
    </h2>
    <p class="text-lg text-white/80 text-center mb-12">
      Ready to turn your idea into reality? Let's discuss your project and create something amazing together.
    </p>

    <form id="contact-form" class="space-y-6">
      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="name" class="block text-white/80 mb-2">Name</label>
          <input
            type="text"
            id="name"
            name="name"
            required
            class="w-full px-4 py-2 bg-white/5 border border-white/10 rounded-lg text-white focus:outline-none focus:border-white/20"
          />
        </div>
        <div>
          <label for="email" class="block text-white/80 mb-2">Email</label>
          <input
            type="email"
            id="email"
            name="email"
            required
            class="w-full px-4 py-2 bg-white/5 border border-white/10 rounded-lg text-white focus:outline-none focus:border-white/20"
          />
        </div>
      </div>

      <div>
        <label for="message" class="block text-white/80 mb-2">Message</label>
        <textarea
          id="message"
          name="message"
          rows="4"
          required
          class="w-full px-4 py-2 bg-white/5 border border-white/10 rounded-lg text-white focus:outline-none focus:border-white/20"
        ></textarea>
      </div>

      <div class="text-center">
        <button
          type="submit"
          class="glass-button primary"
        >
          Send Message
        </button>
      </div>
    </form>
  </div>
</section>

<!-- Google tag (gtag.js) event - delayed navigation helper -->
<script is:inline>
  // Helper function to delay opening a URL until a gtag event is sent.
  // Call it in response to an action that should navigate to a URL.
  function gtagSendEvent(url) {
    var callback = function () {
      if (typeof url === 'string') {
        window.location = url;
      }
    };
    gtag('event', 'conversion_event_submit_lead_form', {
      'event_callback': callback,
      'event_timeout': 2000,
      // <event_parameters>
    });
    return false;
  }
</script>

<script is:inline>
  (function () {
    emailjs.init("vS3CR-R0Bjl5BLllJ");
  })();

  const form = document.getElementById("contact-form");
  if (form) {
    form.addEventListener("submit", async function (e) {
      e.preventDefault();

      const button = form.querySelector('button[type="submit"]');
      const originalContent = button.innerHTML;
      button.disabled = true;
      button.innerHTML = `
        <svg class="animate-spin -ml-1 mr-3 h-5 w-5 text-black" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
          <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
          <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
        </svg>
        Sending...
      `;

      try {
        const templateParams = {
          from_name: form.name.value,
          from_email: form.email.value,
          message: form.message.value,
        };

        await emailjs.send("service_0lxsyqp", "template_jlpvnxd", templateParams);

        // Track form submission conversion
        gtagSendEvent('/#contact');

        // Show success message
        button.innerHTML = `
          <svg class="w-6 h-6 text-black" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
          </svg>
          Message Sent!
        `;
        button.classList.remove("primary");
        button.classList.add("success");

        // Reset form
        form.reset();

        // Reset button after delay
        setTimeout(() => {
          button.innerHTML = originalContent;
          button.classList.remove("success");
          button.classList.add("primary");
          button.disabled = false;
        }, 3000);
      } catch (error) {
        console.error("Error:", error);
        button.innerHTML = "Error sending message";
        button.classList.add("error");

        setTimeout(() => {
          button.innerHTML = originalContent;
          button.classList.remove("error");
          button.disabled = false;
        }, 3000);
      }
    });
  }
</script>
